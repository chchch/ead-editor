<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" 
                xmlns:x="https://ead3.archivists.org/schema/"
                exclude-result-prefixes="x">
<xsl:output method="html" omit-xml-declaration="yes"/>


<xsl:template match="x:eadid"/>

<xsl:template match="x:titlestmt">
    <xsl:element name="img">
        <xsl:attribute name="class">editbutton</xsl:attribute>
        <xsl:attribute name="id">headeredit</xsl:attribute>
        <xsl:attribute name="src">edit_icon.svg</xsl:attribute>
    </xsl:element>
    <h1><xsl:apply-templates select="x:titleproper"/></h1>
</xsl:template>

<xsl:template match="x:publicationstmt">
    <h2><xsl:apply-templates select="x:publisher"/>, <xsl:apply-templates select="x:date"/></h2>
</xsl:template>

<xsl:template match="x:profiledesc" />
<xsl:template match="x:revisiondesc" />

<xsl:template match="x:archdesc">
    <xsl:apply-templates />
</xsl:template>

<xsl:template match="x:did">
    <p><span class="heading">Title: </span> <xsl:apply-templates select="x:unittitle/x:title"/></p>
    <p><span class="heading">Author: </span> <xsl:apply-templates select="x:unittitle/x:persname"/></p>
    <p><span class="heading">Shelfmark: </span> <xsl:apply-templates select="x:unitid[@type='cote']"/><xsl:text> </xsl:text>
        <xsl:text>(</xsl:text><xsl:apply-templates select="x:unitid[@type='ancienne cote']"/><xsl:text>) </xsl:text>
    </p>
    <p>
        <span class="heading">Language &#038; material: </span><xsl:apply-templates select="x:langmaterial"/><xsl:text>. </xsl:text>
    </p>
    <p><span class="heading">Date: </span><xsl:apply-templates select="x:unitdate"/>
    </p>
    <p><span class="heading">Format: </span>
        <xsl:apply-templates select="x:physdesc/x:geogname"/><xsl:text> </xsl:text>
        <xsl:apply-templates select="x:physdesc/x:physfacet[@type='support']"/><xsl:text> </xsl:text>
        <xsl:apply-templates select="x:physdesc/x:extent"/><xsl:text>. </xsl:text>
        <xsl:apply-templates select="x:physdesc/x:dimensions"/><xsl:text>. </xsl:text>
        <xsl:apply-templates select="x:physdesc/x:physfacet[@type='ecriture']"/><xsl:text> </xsl:text>
        <xsl:apply-templates select="x:physdesc/x:physfacet[@type='reliure']"/><xsl:text> </xsl:text>
    </p>
</xsl:template>

<xsl:template match="x:repository"/>

<xsl:template match="x:language">
    <xsl:apply-templates/>
</xsl:template>

<xsl:template match="x:scopecontent">
    <h3>Description</h3>
    <xsl:apply-templates/>
</xsl:template>

<xsl:template match="x:scopecontent/x:p[@id='shortdesc']">
    <xsl:if test="normalize-space(.) != ''">
        <p><xsl:apply-templates /></p>
    </xsl:if>
</xsl:template>

<xsl:template match="x:scopecontent/x:p[@id='othertestimonies']">
    <xsl:if test="normalize-space(.) != ''">
        <p><xsl:apply-templates /></p>
    </xsl:if>
</xsl:template>

<xsl:template match="x:scopecontent/x:p[@id='contents']">
    <xsl:if test="normalize-space(.) != ''">
        <p><xsl:apply-templates /></p>
    </xsl:if>
</xsl:template>

<xsl:template match="x:scopecontent/x:p[@id='completeness']">
    <xsl:if test="normalize-space(.) != ''">
        <p><xsl:apply-templates /></p>
    </xsl:if>
</xsl:template>

<xsl:template match="x:scopecontent/x:p[@id='excerpts']">
    <xsl:if test="normalize-space(.) != ''">
        <p><xsl:apply-templates /></p>
    </xsl:if>
</xsl:template>

<xsl:template match="x:scopecontent/x:p[@id='abbreviations']">
    <xsl:if test="normalize-space(.) != ''">
        <p><xsl:apply-templates /></p>
    </xsl:if>
</xsl:template>

<xsl:template match="x:scopecontent/x:p[@id='transliteration']">
    <xsl:if test="normalize-space(.) != ''">
        <p><xsl:apply-templates /></p>
    </xsl:if>
</xsl:template>

<xsl:variable name="langs">
    <lang name="san">Sanskrit</lang>
    <lang name="pra">Prakrit</lang>
    <lang name="hin">Hindi</lang>
    <lang name="guj">Gujarati</lang>
</xsl:variable>

<xsl:template name="splitLang">
    <xsl:param name="langs"/>
    <xsl:if test="string-length($langs)">
        <xsl:variable name="langstr" select="substring-before(concat($langs,' '),' ')"/>
        <xsl:for-each select="document('')/xsl:stylesheet/xsl:variable[@name='langs']/*">
            <xsl:if test="@name = $langstr">
                <xsl:value-of select= "."/>
                <xsl:text>. </xsl:text>
            </xsl:if>
        </xsl:for-each>
        <xsl:call-template name="splitLang">
            <xsl:with-param name="langs" select="substring-after($langs, ' ')"/>
        </xsl:call-template>
    </xsl:if>
</xsl:template>

<xsl:template match="x:corpname">
    <p>
        <xsl:apply-templates/>
    </p>
</xsl:template>

<xsl:template match="x:altformavail"/>
<xsl:template match="x:dao" />

<xsl:template match="x:bibliography">
    <h3>Bibliography</h3>
    <xsl:apply-templates/>
</xsl:template>

<xsl:template match="x:acqinfo/x:p">
    <p><span class="heading">Provenance: </span><xsl:apply-templates/></p>
</xsl:template>

<xsl:template match="x:processinfo">
    <xsl:apply-templates/>
</xsl:template>

<xsl:template match="x:persname">
    <xsl:apply-templates/>
</xsl:template>

<xsl:template match="x:address">
    <xsl:apply-templates/>
</xsl:template>

<xsl:template match="x:p">
    <p>
        <xsl:apply-templates/>
    </p>
</xsl:template>

</xsl:stylesheet>
